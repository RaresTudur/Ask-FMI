@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        
        @*<li class="nav-item">
            @{
                
                if(user.Imagini == null){
                }

                if (user.ProfilePicture && user.Imagini != null)
                {

                    var profil = user.Imagini.Where(a => a.Usage == "Profile").First();
                    var imageBase64 = Convert.ToBase64String(profil.ImageData);
                    var imageUrl = $"data:{profil.Type};base64,{imageBase64}";
                    <img src="@imageUrl" alt="Profile Image" class="profile-image" />

                }
            }
    </li>*@

        <li class="nav-item">
            <img  class="rounded-circle" alt="avatar1" src="@user.ProfileImage()" style="width: 40px; height:40px;" />
        </li>

        <li class="nav-item">
            <a class="nav-link text-dark" href="/Users/Show/@user.Id" title="Manage">Buna,<strong> @user.FirstName @user.LastName </strong></a>
        </li>

    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
